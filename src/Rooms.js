// Generated by CoffeeScript 1.3.3
var Room, Rooms,
  __slice = [].slice;

Room = (function() {

  function Room(options) {
    this.x = options.x, this.y = options.y, this.boundaries = options.boundaries;
  }

  Room.prototype.position = function() {
    return "" + this.x + ":" + this.y;
  };

  return Room;

})();

Rooms = (function() {

  function Rooms(width, height) {
    var boundaries, h, options, room, w, _i, _j, _ref, _ref1;
    this.width = width;
    this.height = height;
    for (w = _i = 0, _ref = this.width; 0 <= _ref ? _i <= _ref : _i >= _ref; w = 0 <= _ref ? ++_i : --_i) {
      for (h = _j = 0, _ref1 = this.height; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; h = 0 <= _ref1 ? ++_j : --_j) {
        boundaries = {
          north: h === 0,
          east: w === this.width,
          south: h === this.height,
          west: w === 0
        };
        options = {
          x: w,
          y: h,
          boundaries: boundaries
        };
        room = new Room(options);
        this[room.position()] = room;
      }
    }
    View.setRooms(this);
  }

  Rooms.prototype.getRoomAt = function(x, y) {
    return this["" + x + ":" + y];
  };

  Rooms.prototype.getRelativeRoom = function() {
    var position, positionArray, start, step, steps, _i, _len;
    start = arguments[0], steps = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    positionArray = start.split(':');
    position = {
      x: positionArray[0],
      y: positionArray[1]
    };
    for (_i = 0, _len = steps.length; _i < _len; _i++) {
      step = steps[_i];
      if (step.x != null) {
        position.x += step.x;
      }
      if (step.y != null) {
        position.y += step.y;
      }
    }
    return this["" + x + ":" + y];
  };

  return Rooms;

})();
